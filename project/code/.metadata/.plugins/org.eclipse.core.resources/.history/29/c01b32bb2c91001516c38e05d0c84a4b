package gui;

import java.awt.Color;
import java.awt.Graphics;

import javax.swing.JPanel;

import characters.MainCar;
import compute.CarPanelState;

public class CarPanel extends JPanel {
	private static final long serialVersionUID = -7055815099049883098L;

	private CarPanelState state;

	private int width;
	private int height;

	public CarPanel(int w, int h) {
		// call parent constructor
		super();

		// set properties of the thing
		setOpaque(true);
		setBackground(Color.GREEN);

		// set the width and height
		this.width = w;
		this.height = h;

		// initialize the state
		this.state = new CarPanelState();

		// make a new main car
		state.main_car = new MainCar(w, h);
	}

	public CarPanelState getState() {
		return this.state;
	}

	public void setState(CarPanelState state) {
		this.state = state;
	}

	protected void paintComponent(Graphics g) {
		super.paintComponent(g);

		// call methods to preform different drawing operations
		draw_background(g);
		draw_road(g);
		draw_obstacles(g);
		draw_other_cars(g);
		draw_signs(g);
		state.main_car.draw(g);
	}

	/**
	 * draw the background color
	 */
	private void draw_background(Graphics g) {
		g.setColor(Color.GREEN);
		g.fillRect(0, 0, width, height);
	}

	/**
	 * draw the road on which the car will drive
	 */
	private void draw_road(Graphics g) {
		// draw the vertical road
		g.setColor(Color.DARK_GRAY);
		// g.fillRect(((int) ((width * .8) / 2)), 0, ((int) (width * .2)),
		// height);

		// draw the horizontal road
		int road_height = (int) (height * .4);
		g.fillRect(0, height / 2 - road_height / 2, width, road_height);

		// TODO draw vertical lines
		g.setColor(Color.YELLOW);

		// TODO draw horizontal lines
		int line_height = (int) (height * .01);
		g.fillRect(0, height / 2 - road_height / 2, width, road_height);
	}

	/**
	 * draw the obstacles array
	 * 
	 * @param g
	 */
	private void draw_obstacles(Graphics g) {
		for (Character c : state.obstacles) {
			// c.draw(g);
			System.out.println(c);
		}
	}

	/**
	 * draw the obstacles array
	 * 
	 * @param g
	 */
	private void draw_other_cars(Graphics g) {
		for (Character c : state.other_cars) {
			// c.draw(g);
			System.out.println(c);
		}
	}

	/**
	 * draw the sign array
	 * 
	 * @param g
	 */
	private void draw_signs(Graphics g) {
		for (Character c : state.signs) {
			// c.draw(g);
			System.out.println(c);
		}
	}
}
